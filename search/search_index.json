{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Connect your Jira issues to Obsidian. Search for issues and them to frontmatter or use them in templates without leaving Obsidian. See the project roadmap for details on the future of the plugin.</p>"},{"location":"#install","title":"Install","text":"<p>Until the plugin is available on the community registry it may be installed using BRAT.</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>See configuration for setup instructions.</p> <p>This plugin currently only supports Obsidian commands and usage through the plugin's JavaScript API.</p>"},{"location":"#commands","title":"Commands","text":""},{"location":"#insert-issue-link-at-cursor","title":"Insert issue link at cursor","text":"<p>Executing the command <code>Jira Cloud: Insert issue link at cursor</code> will open a modal where you can search for issues by key or summary title. After selecting an issue, a link to that issue will be added at the cursor in the current file. The link includes the key and issue summary, like <code>[AB-1234: Deploy the prototype before the deadline](https://your-company.atlassian.net/browse/AB-1234)</code>.</p>"},{"location":"#summarize-to-frontmatter","title":"Summarize to frontmatter","text":"<p>Executing the command <code>Jira Cloud: Summarize issue to frontmatter</code> will open a modal where you can search for issues by key or summary title. After selecting an issue, the following data will be added to the current note's YAML frontmatter:</p> <pre><code>issues:\n- key: AA-1234\nsummary: Issue Name\nlink: https://your-company.atlassian.net/browse/AA-1234\nassignee: Person McPerson\nstatus: To-do\nreporter: Another Person\ncreated: 2023-07-01T13:57:38.686-0700\nupdated: 2023-07-10T11:05:48.493-0700\nfullText: &gt;-\nThe full description of the issue as a single or multiline string.\nThis example shows a multiline string.\n</code></pre> <p>Subsequent executions of the command will add to the issues object if a different issue is selected. If the same issue is selected, the values will be replaced.</p>"},{"location":"#add-issue-to-frontmatter","title":"Add issue to frontmatter","text":"<p>Executing the command <code>Jira Cloud: Add issue to frontmatter</code> will open a modal where you can search for issues by key or summary title. After selected an issue, many fields will be added to the YAML frontmatter:</p> <pre><code>issues:\n- key: AA-1234\nsummary: Issue Name\nlink: https://your-company.atlassian.net/browse/AA-1234\nissuetype:\niconUrl: https://your-company.atlassian.net/rest/api/2/some_url/\nname: Bug\nsubtask: false\nstatus:\niconUrl: https://your-company.atlassian.net/images/icons/statuses/generic.png\nname: To-do\nassignee:\nemailAddress: person@company.com\ndisplayName: Person McPerson\navatar: https://avatars.example.net/some_id/48\nreporter:\ndisplayName: Another Person\navatar: https://avatars.example.net/some_id/48\nfullText: &gt;-\nThe full description of the issue as a single or multiline string.\nThis example shows a multiline string.\nupdated: 2023-07-10T11:05:48.493-0700\ncreated: 2023-07-07T13:57:38.686-0700\npriority:\niconUrl: https://your-company.atlassian.net/images/icons/priorities/high.svg\nname: High\nproject:\nname: Engineering\nkey: AA\navatar: https://your-company.atlassian.net/rest/api/3/some_url/\nlabels: []\n</code></pre> <p>If the \"include full API response in YAML frontmatter\" setting is enabled, the data will be expanded further. Note that this will produce a very large result.</p>"},{"location":"#javascript-api","title":"JavaScript API","text":"<p>This plugin exposes an API that can be used with other plugins. It can be accessed via <code>app.plugins.plugins['jira-cloud'].api</code>. See the API class here.</p> <p>For example, the following Templater template adds an issue inside a callout, with the callout type configured using the Admonition plugin.</p> <pre><code>&lt;%* const issue = await app.plugins.plugins['jira-cloud'].api.getIssue() %&gt;\n\n&gt; [!Issue&lt;% issue.issuetype.name %&gt;] &lt;% `${issue.key}: ${issue.summary}` %&gt;\n&gt; &lt;% `**Status:** ${issue.status.name} **Assigned to:** ${issue.assignee.displayName}` %&gt;\n&gt;\n&gt; &lt;% issue.fullText.split('\\n').join('\\n&gt; ') %&gt;\n</code></pre> <p>This could produce a callout like this:</p> <p></p> <p>See Examples for more examples of use.</p>"},{"location":"#disclaimers","title":"Disclaimers","text":"<p>This plugin is open source software not created or endorsed in any way by Atlassian. It also makes use of other open source libraries, mainly Jira.js, which is similarly not created or endorsed by Atlassian.</p> <p>Use of this plugin requires the creation of an API Token which grants full read and write access to the configured Jira instance; though it can be revoked at any time, anything your Jira account can do, this token can do. Use at your own risk.</p>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#add-username-and-host","title":"Add username and host","text":"<p>Jira Cloud can only be connected to one Jira instance at a time.</p> <ol> <li>In Obsidian, navigate to Jira Cloud plugin settings.</li> <li>The Host setting should be configured with your Atlassian URI, eg. <code>https://my-company.atlassian.net</code>.</li> <li>The Username setting should be configured with your Atlassian username. This will likely be an email address, eg. <code>myname@my-company.com</code>.</li> </ol>"},{"location":"configuration/#generate-an-api-key","title":"Generate an API key","text":"<p>Obsidian Jira Cloud must be connected to your Jira account. This should be the account associated with the configured username.</p> <ol> <li>Navigate to the API Tokens page in Atlassian account settings.</li> <li>Click \"Create API token\".</li> <li>Give the token a memorable name. For example, it could be simply named <code>Obsidian</code>.</li> <li>Click \"Create\".</li> <li>Click the \"Copy\" button to copy the token. Note that you cannot retrieve the token again, so it must be copied before closing this page.</li> <li>Paste the value into the \"API Token\" Jira Cloud plugin setting in Obsidian.</li> </ol> <p>The API token can be revoked at any time by returning to the API Tokens page or by clicking the link in the email you received from Atlassian upon creation of the token.</p>"},{"location":"configuration/#verify-configuration","title":"Verify configuration","text":"<p>To test the configuration, execute one of the Jira Cloud Obsidian commands and search for an issue. If issue suggestions appear, the plugin is working.</p> <p>In the future, a verification button may be added to plugin settings. See #5.</p>"},{"location":"configuration/#troubleshooting","title":"Troubleshooting","text":"<p>If something goes wrong, check that your Jira URI, Username, and API token are correct, then restart Obsidian.</p> <p>If you continue to have issues, reach out to @OfficerHalf on the Obsidian Discord.</p>"},{"location":"examples/","title":"Plugin API examples","text":""},{"location":"examples/#templater","title":"Templater","text":"<p>The following examples are for use with the Templater Plugin. See the Templater docs for more details.</p>"},{"location":"examples/#issue-callout","title":"Issue callout","text":"<p>This template gets an issue then formats it into a callout. It creates a callout of type <code>Issue&lt;IssueType&gt;</code> where <code>IssueType</code> is the issue type from the API. So if you use issue type \"Bug\", you could configure a new IssueBug admonition type.</p> issue-callout.md<pre><code>&lt;%* const issue = await app.plugins.plugins['jira-cloud'].api.getIssue() %&gt;\n&gt; [!Issue&lt;% issue.issuetype.name %&gt;] &lt;% `${issue.key}: ${issue.summary}` %&gt;\n&gt; &lt;% `**Status:** ${issue.status.name} **Assigned to:** ${issue.assignee.displayName}` %&gt;\n&gt;\n&gt; &lt;% issue.fullText.split('\\n').join('\\n&gt; ') %&gt;\n</code></pre>"}]}